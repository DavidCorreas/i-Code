version: '3'
services:
  udop:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    user: vscode
    network_mode: service:nginx
    container_name: udop
    volumes:
      - ../..:/workspaces/udop:cached
    cap_add:
      - SYS_ADMIN
    shm_size: '100gb'
    ipc: host
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            device_ids: ['0','1']
            capabilities: [gpu]

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      ocr:
        condition: service_healthy

  ocr:
    build:
        context: ./ocr
        dockerfile: Dockerfile
    hostname: "ocr.{{.Task.Slot}}"
    deploy:
      replicas: 12
      resources:
        limits:
          memory: 10G
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    command: /bin/sh -c "python flask_api.py"
    
  # db:
  #   image: postgres
  #   container_name: db
  #   environment:
  #     POSTGRES_USER: mlflow
  #     POSTGRES_PASSWORD: mlflow
  #     POSTGRES_DB: mlflow
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data

  # minio:
  #   image: minio/minio
  #   container_name: minio
  #   command: server /data
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     MINIO_ACCESS_KEY: minio
  #     MINIO_SECRET_KEY: miniopassword
  #   volumes:
  #     - minio-data:/data

  # mlflow:
  #   image: ghcr.io/mlflow/mlflow:v2.0.1
  #   container_name: mlflow
  #   environment:
  #     MLFLOW_S3_ENDPOINT_URL: http://minio:9000
  #     MLFLOW_S3_ACCESS_KEY: minio
  #     MLFLOW_S3_SECRET_KEY: miniopassword
  #     MLFLOW_TRACKING_URI: "postgresql://mlflow:mlflow@db/mlflow"
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - db
  #     - minio
  #   entrypoint: mlflow server --host 0.0.0.0

volumes:
  postgres-data:
  minio-data:
